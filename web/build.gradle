
plugins {
    id "org.flywaydb.flyway" version "4.1.1"
}

jar {
    baseName = 'emonlight-web'
    version = '0.0.1-SNAPSHOT'
}

//ext['flyway-url'] = ''
//ext['flyway-user'] = ''
//ext['flyway-password'] = ''

task development {
}

task production {
}

task testing {
}

ext['thymeleaf.version'] = '3.0.3.RELEASE'
ext['thymeleaf-layout-dialect.version'] = '2.1.2'

gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(development)) {
        bootRun.systemProperty('spring.profiles.active', 'dev')
        flyway {
            url = 'jdbc:postgresql://lime2:5432/emonlight-db_dev'
            user = 'emonlight'
            password = 'emonlight'
        }
    } else if (taskGraph.hasTask(production)) {
        bootRun.systemProperty('spring.profiles.active', 'prod')
        flyway {
            url = 'jdbc:postgresql://lime2:5432/emonlight-db_prod'
            user = 'emonlight'
            password = 'emonlight'
        }
    } else if (taskGraph.hasTask(testing)) {
        test.systemProperty('spring.profiles.active', 'testing')
        flyway {
            url = 'jdbc:postgresql://lime2:5432/emonlight-db_test'
            user = 'emonlight'
            password = 'emonlight'
        }
    }
}

dependencies {

    compile project(':commons')

    compile('org.springframework.boot:spring-boot-starter-thymeleaf') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework:spring-jdbc")
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212.jre7'
    compile("org.springframework.boot:spring-boot-starter-activemq")
    compile("org.springframework.boot:spring-boot-devtools")

    testCompile("com.h2database:h2")

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
//    compile(group: 'org.apache.kafka', name: 'kafka-streams', version: '0.10.1.1') {
//        exclude(module: 'slf4j-log4j12')
//        exclude(module: 'org.slf4j:log4j-over-slf4j')
//        exclude group: 'log4j'
//		exclude( module: 'rocksdbjni')
//    }
//	runtime files('libs/rocksdbjni-5.0.0-linux32.jar')

}
