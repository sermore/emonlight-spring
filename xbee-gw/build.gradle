repositories {
    maven {
        url "http://ftp1.digi.com/support/m-repo/"
    }
}

//sourceSets {
//    main {
//        java {
//            exclude '**/Kafka*.java'
//        }
//    }
//    test {
//        java {
//            exclude '**/Kafka*.java'
//        }
//    }
//}

jar {
    baseName = 'emonlight-xbee-gw'
}

springBoot {
    executable = true
}

test {
    systemProperty("java.library.path", "/usr/lib/jni")
    systemProperty 'notification.serverKey', project.property('notification_serverKey')
    systemProperty 'notification.deviceId', project.property('notification_deviceId')
}

bootRun {
    systemProperty("java.library.path", "/usr/lib/jni")
    systemProperty 'spring.profiles.active', 'dev'
    systemProperty 'notification.serverKey', project.property('notification_serverKey')
    systemProperty 'notification.deviceId', project.property('notification_deviceId')
}

remotes {
    deployHost {
        host = project.hasProperty('deploy_host') ? project.property('deploy_host') : 'localhost'
        port = project.hasProperty('deploy_port') ? project.property('deploy_port') : 22
        user = project.hasProperty('deploy_user') ? project.property('deploy_user') : System.properties['user.name']        
        sudoPassword = project.hasProperty('deploy_sudo_password') ? project.property('deploy_sudo_password') : ''
        identity = project.hasProperty('identity') ? project.property('identity') : file("${System.properties['user.home']}/.ssh/id_rsa")
    }
}

task deploy(dependsOn: 'build') {
    doLast {
        ssh.run {
            session(remotes.deployHost) {
                // test if service is already installed
                if (!execute('id emonlight-xbee-gw', ignoreError: true)) {
                    put from: file('conf/install.sh'), into: '/tmp'
                    executeSudo('bash /tmp/install.sh', pty: true)
                }
                // deploy executable file
                put from: jar.archivePath.absolutePath, into: '/tmp'
                execute 'chmod a+x /tmp/' + jar.archiveName
                executeSudo 'systemctl stop emonlight-xbee-gw', pty: true
                executeSudo 'mv -f /tmp/' + jar.archiveName + ' /var/lib/emonlight-xbee-gw/emonlight-xbee-gw.jar', pty: true
                executeSudo 'systemctl start emonlight-xbee-gw', pty: true
            }
        }
    }
}

task undeploy {
    doLast {
        ssh.run {
            // test if service is already installed
            session(remotes.lime2) {
                put from: file('conf/uninstall.sh'), into: '/tmp'
                executeSudo("bash /tmp/uninstall.sh", pty: true)
            }
        }
    }
}

dependencies {
    compile(project(':commons')) {
//        exclude group: 'org.apache.kafka'
//        exclude module: 'spring-kafka'
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client'

    compile("org.springframework:spring-web")
    compileOnly("org.springframework.boot:spring-boot-starter-activemq")
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'


    compile group: 'org.rxtx', name: 'rxtx', version: '2.1.7'
    compileOnly(group: 'com.digi', name: 'android-sdk', version: '5.1.1')
    compileOnly(group: 'com.digi', name: 'android-sdk-addon', version: '3')
    compile(group: 'com.digi.xbee', name: 'xbee-java-library', version: '1.2.+') {
        exclude(module: 'rxtx-native')
        exclude(group: 'org.slf4j')
        exclude group: 'log4j'
        exclude(module: 'android-sdk')
        exclude(module: 'android-sdk-addon')
    }

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.5'

    compile group: 'org.influxdb', name: 'influxdb-java', version: '2.5+'

    compileOnly group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.1.4.RELEASE'
    testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test', version: '2.1.4.RELEASE'

    testCompile("org.apache.activemq:activemq-broker")

}
