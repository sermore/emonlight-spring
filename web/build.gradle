//plugins {
//    id "org.flywaydb.flyway" version "4.1.1"
//}

jar {
    baseName = 'emonlight-web'
    version = '0.0.1-SNAPSHOT'
}

springBoot {
    executable = true
}

//ext['flyway-url'] = ''
//ext['flyway-user'] = ''
//ext['flyway-password'] = ''

//task development {
//}
//
//task production {
//}
//
//task testing {
//}

ext['thymeleaf.version'] = '3.0.9.RELEASE'
ext['thymeleaf-layout-dialect.version'] = '2.3.0'

//gradle.taskGraph.whenReady { taskGraph ->
//    if (taskGraph.hasTask(development)) {
//        bootRun.systemProperty('spring.profiles.active', 'dev')
//        flyway {
//            url = 'jdbc:postgresql://lime2:5432/emonlight-db_dev'
//            user = 'emonlight'
//            password = 'emonlight'
//        }
//    } else if (taskGraph.hasTask(production)) {
//        bootRun.systemProperty('spring.profiles.active', 'prod')
//        flyway {
//            url = 'jdbc:postgresql://lime2:5432/emonlight-db_prod'
//            user = 'emonlight'
//            password = 'emonlight'
//        }
//    } else if (taskGraph.hasTask(testing)) {
//        test.systemProperty('spring.profiles.active', 'testing')
//        flyway {
//            url = 'jdbc:postgresql://lime2:5432/emonlight-db_test'
//            user = 'emonlight'
//            password = 'emonlight'
//        }
//    }
//}

task deploy(dependsOn: 'build') {
    doLast {
        ssh.run {
            session(remotes.deployHost) {
                // test if service is already installed
                if (!execute('id emonlight-xbee-gw', ignoreError: true)) {
                    put from: file('conf/install.sh'), into: '/tmp'
                    executeSudo('bash /tmp/install.sh', pty: true)
                }
                // copy original file
                executeSudo 'cp -f /var/lib/emonlight-xbee-gw/emonlight-web.jar /var/lib/emonlight-xbee-gw/emonlight-web.jar.bak', pty: true, ignoreError: true
                // deploy executable file
                put from: jar.archivePath.absolutePath, into: '/tmp'
                execute 'chmod a+x /tmp/' + jar.archiveName
                executeSudo 'systemctl stop emonlight-web', pty: true
                executeSudo 'mv -f /tmp/' + jar.archiveName + ' /var/lib/emonlight-xbee-gw/emonlight-web.jar', pty: true
                executeSudo 'systemctl start emonlight-web', pty: true
            }
        }
    }
}

task undeploy {
    doLast {
        ssh.run {
            // test if service is already installed
            session(remotes.lime2) {
                put from: file('conf/uninstall.sh'), into: '/tmp'
                executeSudo("bash /tmp/uninstall.sh", pty: true)
            }
        }
    }
}



dependencies {

    compile project(':commons')

    compile('org.springframework.boot:spring-boot-starter-thymeleaf') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client'
//    compile("org.springframework:spring-jdbc")
//    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212.jre7'
    compile("org.springframework.boot:spring-boot-starter-activemq")
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '4.11.0.201803080745-r'

//    compile("org.springframework.boot:spring-boot-devtools")

    compile group: 'org.webjars', name: 'webjars-locator'
    compile 'org.webjars:jquery:3.3.1-1'
    compile 'org.webjars:popper.js:1.12.9-1'
    compile 'org.webjars:bootstrap:4.0.0-2'
    compile 'org.webjars:highcharts:6.0.7'
    compile 'org.webjars:material-design-icons:3.0.1'

//    testCompile("com.h2database:h2")

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
//    compile(group: 'org.apache.kafka', name: 'kafka-streams', version: '0.10.1.1') {
//        exclude(module: 'slf4j-log4j12')
//        exclude(module: 'org.slf4j:log4j-over-slf4j')
//        exclude group: 'log4j'
//		exclude( module: 'rocksdbjni')
//    }
//	runtime files('libs/rocksdbjni-5.0.0-linux32.jar')

}
